# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: ['main']

env:
  NuGetDirectory: ${{ github.workspace}}/tmpnuGet

jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Install SonarCloud Scanner
        run: |
          dotnet tool install --global dotnet-sonarscanner

      - name: Prepare SonarCloud Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin /k:"williampaciaroni_illyW-Framework" /o:williampaciaroni /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"

      - name: Build
        run: dotnet build illyW.Framework.sln -c Release

      - name: Run Tests and Collect Coverage
        run: dotnet test illyW.Framework.sln /p:CollectCoverage=true /p:CoverletOutputFormat=opencover

      - name: Finalize SonarCloud Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      - name: Pack
        run: dotnet pack illyW.Framework.sln -o tmpnuGet --no-restore

      # Publish the NuGet package as an artifact, so they can be used in the following jobs
      - uses: actions/upload-artifact@v3
        with:
          name: nuget
          if-no-files-found: error
          retention-days: 7
          path: ${{ env.NuGetDirectory }}/*.nupkg

      - name: Generate nuGetFiles JSON
        id: nuGetPackages
        run: |
          echo "nuGetFiles=$(ls -l ${{ env.NuGetDirectory }} | grep '.nupkg' | awk -F ' ' '{print $9}' | jq -R -s -c 'split("\n") | map(select(length > 0))')" >> "$GITHUB_OUTPUT"

    outputs:
      nuGetFiles: ${{ steps.nuGetPackages.outputs.nuGetFiles }}

  publish-nupkg:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        file: ${{ fromJson(needs.build.outputs.nuGetFiles) }}

    steps:
      # Download the NuGet package created in the previous job
      - uses: actions/download-artifact@v3
        with:
          name: nuget
          path: ${{ env.NuGetDirectory }}

      - name: Check file presence
        run: |
          if [ -e ${{ env.NuGetDirectory }}/${{ matrix.file }} ]; then
              echo "${{ matrix.file }} found."
          else
              echo "Error: ${{ matrix.file }} not found"
              exit 1
          fi

      - name: Deploy to NuGet
        run: |
          dotnet nuget push ${{ env.NuGetDirectory }}/${{ matrix.file }} --api-key "${{ secrets.NUGET_API_KEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
